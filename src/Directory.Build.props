<Project>
  <Import Project="$(MSBuildThisFileDirectory)..\build\Package.Build.props" Condition="Exists('$(MSBuildThisFileDirectory)..\build\Package.Build.props')" />
  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>
    <AddRazorSupportForMvc>true</AddRazorSupportForMvc>
    <SerenityDir Condition="'$(SerenityDir)' == '' And Exists('$(SolutionDir)Serenity\')">$(SolutionDir)Serenity\</SerenityDir>
    <SerenityDir Condition="'$(SerenityDir)' == '' And Exists('$(MSBuildThisFileDirectory)..\Serenity\')">$(MSBuildThisFileDirectory)..\Serenity\</SerenityDir>
    <SerenityDir Condition="'$(SerenityDir)' == '' And Exists('$(MSBuildThisFileDirectory)..\..\Serenity\')">$(MSBuildThisFileDirectory)..\..\Serenity\</SerenityDir>
    <SerenitySrc Condition="'$(SerenitySrc)' == ''">$(SerenityDir)src\</SerenitySrc>
    <SerenityWebProj Condition="'$(SerenityWebProj)' == ''">$(SerenitySrc)Serenity.Net.Web\Serenity.Net.Web.csproj</SerenityWebProj>
    <SerenityScriptsProj Condition="'$(SerenityScriptsProj)' == ''">$(SerenitySrc)Serenity.Scripts\Serenity.Scripts.csproj</SerenityScriptsProj>
    <DotNetSergenDir>$(SerenitySrc)Serenity.Net.CodeGenerator\bin\</DotNetSergenDir>
    <DotNetSergen Condition="'$(DotNetSergen)' == '' And Exists('$(DotNetSergenDir)sergen')">$(DotNetSergenDir)sergen</DotNetSergen>
    <DotNetSergen Condition="'$(DotNetSergen)' == '' And Exists('$(DotNetSergenDir)sergen.exe')">$(DotNetSergenDir)sergen.exe</DotNetSergen>
    <DotNetSergen Condition="'$(DotNetSergen)' == ''">dotnet sergen</DotNetSergen>
	<DotnetToolManifestFile>$(MSBuildThisFileDirectory).config\dotnet-tools.json</DotnetToolManifestFile>
	<DotnetToolRestoreStamp>$(MSBuildThisFileDirectory).config\.restore-stamp</DotnetToolRestoreStamp>
    <SergenTransform>all</SergenTransform>
    <StaticWebAssetBasePath>/$(MSBuildProjectName)</StaticWebAssetBasePath>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <DefaultItemExcludes>$(DefaultItemExcludes);package*.json;sergen.json;tsconfig.json;wwwroot\index.d.ts;wwwroot\**\*.less</DefaultItemExcludes>
    <NewtonsoftJsonVersion Condition="'$(NewtonsoftJsonVersion)' == ''">12.0.3</NewtonsoftJsonVersion>
    <FrameworkPackageVersion Condition="'$(FrameworkPackageVersion)' == ''">5.0.0</FrameworkPackageVersion>
    <AspNetCorePackageVersion Condition="'$(AspNetCorePackageVersion)' == ''">5.0.0</AspNetCorePackageVersion>
    <SerenityVersion Condition="'$(SerenityVersion)' == ''">5.2.2</SerenityVersion>
  </PropertyGroup>
  <ItemGroup>
    <FrameworkReference Include="Microsoft.AspNetCore.App" Condition="'$(UsingMicrosoftNETSdkWeb)' != 'true'" />
    <PackageReference Include="Serenity.Net.Web" Version="$(SerenityVersion)" Condition="!Exists('$(SerenityWebProj)')" />
    <ProjectReference Include="$(SerenityWebProj)" Condition="Exists('$(SerenityWebProj)')" />
    <PackageReference Include="Serenity.Scripts" Version="$(SerenityVersion)" Condition="!Exists('$(SerenityScriptsProj)')" />
    <ProjectReference Include="$(SerenityScriptsProj)" Condition="Exists('$(SerenityScriptsProj)')" />
    <PackageReference Include="Microsoft.TypeScript.MSBuild" Version="4.1.2" Condition="Exists('tsconfig.json')">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <Compile Include="$(MSBuildThisFileDirectory)GlobalSuppressions.cs" Condition="Exists('$(MSBuildThisFileDirectory)GlobalSuppressions.cs')">
      <Link>Properties\GlobalSuppressions.cs</Link>
    </Compile>
    <NpmPackageFile Include="$(MSBuildThisFileDirectory)package.json" Condition="Exists('$(MSBuildThisFileDirectory)package.json')" />
    <NpmPackageFile Include="$(ProjectDir)package.json" Condition="Exists('$(ProjectDir)package.json')" />
  </ItemGroup>
  <ItemGroup>
    <None Remove="*.json"></None>
    <Content Include="*.json">
      <CopyToOutputDirectory>false</CopyToOutputDirectory>
      <Pack>false</Pack>
    </Content>
    <TypingsToPackage Include="wwwroot\index.d.ts" PackagePath="typings\$(ProjectName.ToLowerInvariant())\index.d.ts" Condition="Exists('wwwroot\index.d.ts') OR Exists('tsconfig.json')" />
  </ItemGroup>
</Project>