<Project>
  <ItemGroup>
    <TypeScriptCompile Remove="node_modules\**"></TypeScriptCompile>
  </ItemGroup>
  <Import Project="$(MSBuildThisFileDirectory)\Directory.Build.RestoreTypings.targets" />
  <Import Project="$(SerenitySrc)RestoreNpmPackages.targets" />
  <Target Name="TransformInitTools" BeforeTargets="BeforeBuild" Condition="!Exists('$(DotnetToolManifestFile)')">
    <Exec Command="dotnet new tool-manifest" ContinueOnError="true" WorkingDirectory="$(MSBuildThisFileDirectory)" />
    <Exec Command="dotnet tool install sergen" ContinueOnError="true" WorkingDirectory="$(MSBuildThisFileDirectory)" />
  </Target>
  <Target Name="TransformToolRestore" AfterTargets="BeforeBuild" Inputs="$(DotnetToolManifestFile)" Outputs="$(DotnetToolRestoreStamp)"
          Condition="'$(DotNetSergen)' == 'dotnet sergen' And ('$(SergenTransform)' != '' OR Exists('tsconfig.json'))">
    <Exec Command="dotnet tool restore" ContinueOnError="true" />
    <Touch Files="$(DotnetToolRestoreStamp)" AlwaysCreate="true" />
  </Target>
  <Target Name="CalculateProjectTSConfigInputs">
    <ItemGroup>
      <ProjectTSConfigInputs Include="@(TypeScriptCompile)"
          Condition="'%(TypeScriptCompile.Identity)' != 'wwwroot\index.d.ts'" />
      <ProjectTSConfigInputs Include="tsconfig.json" Condition="Exists('tsconfig.json')" />
      <ProjectTSConfigInputs Include="..\tsconfig.base.json" Condition="Exists('tsconfig.json')" />
    </ItemGroup>
  </Target>
  <Target Name="CompileProjectTSConfig" DependsOnTargets="RestoreTypings;CalculateProjectTSConfigInputs;" AfterTargets="AfterBuild" Condition="Exists('tsconfig.json')"
    Inputs="@(ProjectTSConfigInputs)" Outputs="wwwroot\index.js;wwwroot\index.d.ts">
    <Message Text="Executing TypeScript compiler..." Importance="high"></Message>
    <Exec Command="node &quot;$(TSJavaScriptFile.Replace('build\\..\tools\', 'tools\'))&quot; -p ./tsconfig.json" ContinueOnError="true" />
  </Target>
  <Target Name="IncludeTypingsToPackage" BeforeTargets="_GetPackageFiles">
    <ItemGroup>
      <None Include="@(TypingsToPackage)" Pack="true" PackagePath="%(TypingsToPackage.PackagePath)" />
    </ItemGroup>
  </Target>
  <Target Name="AddJsonLocalTextAssetsAttribute" BeforeTargets="CoreGenerateAssemblyInfo" Condition="Exists('wwwroot\texts')">
    <ItemGroup>
      <AssemblyAttribute Include="Serenity.ComponentModel.JsonLocalTextAssets">
        <_Parameter1>$(StaticWebAssetBasePath)/texts</_Parameter1>
      </AssemblyAttribute>
    </ItemGroup>
  </Target>
</Project>